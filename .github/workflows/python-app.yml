# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      EXTRA_TESTS_VERSION: 3.9
      SUBMIT_COVERAGE_VERSIONS: "2.7,3.9"
      PYTHON_QBITTORRENTAPI_HOST: localhost:8080
      PYTHON_QBITTORRENTAPI_PASSWORD: adminadmin
      PYTHON_QBITTORRENTAPI_USERNAME: admin
      QBT_VER: 4.3.2
    strategy:
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10-dev, pypy2, pypy3]
        # python-version: [3.9]

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install Python Dependencies
      run: |
        python -m pip install -U pip wheel setuptools
        pip install -U codecov coveralls pytest pytest-cov
        pip install .
    
    - name: Lint with flake8
      if: "contains(env.EXTRA_TESTS_VERSION, matrix.python-version)"
      run: |
        pip -q install -U flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Black
      if: "contains(env.EXTRA_TESTS_VERSION, matrix.python-version)"
      run: |
        pip -q install -U black
        black . --check

    - name: Install qBittorrent
      run: |
        sudo add-apt-repository -y -u ppa:qbittorrent-team/qbittorrent-stable
        sudo apt-get -y install qbittorrent-nox
        qbittorrent-nox --daemon
        mkdir -p $HOME/Downloads  # default download location for qbittorrent

    - name: Test with pytest
      run: |
        python -c "import sys; print(sys.version)"
        qbittorrent-nox -v
        pytest

    - name: Upload Coverage to Codecov
      if: "contains(env.SUBMIT_COVERAGE_VERSIONS, matrix.python-version)"
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

    # just sticking to codecov for now
    #- name: Upload Coverage to Coveralls
    #  if: "contains(env.SUBMIT_COVERAGE_VERSIONS, matrix.python-version)"
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  run: coveralls

  install-dev:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    name: "Verify Dev Env"
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.8"
      - name: "Install in dev mode"
        run: "python -m pip install -e .[dev]"
      - name: "Import package"
        run: "python -c 'import qbittorrentapi; print(qbittorrentapi.Client())'"

  package:
    name: "Build & Verify Package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.8"

      - name: "Install twine"
        run: "python -m pip install --upgrade pip setuptools wheel twine"
      - name: "Build package"
        run: "python setup.py sdist bdist_wheel"
      - name: "List result"
        run: "ls -l dist"
      - name: "Check long_description"
        run: "python -m twine check dist/*"
